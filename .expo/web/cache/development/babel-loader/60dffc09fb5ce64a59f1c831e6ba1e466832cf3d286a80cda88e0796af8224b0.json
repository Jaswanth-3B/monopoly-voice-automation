{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport { Box, Paper, Typography, Avatar } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { THEME_COLORS } from \"../../theme/colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BOARD_SIZE = 11;\nvar bounceAnimation = {\n  '@keyframes bounce': {\n    '0%': {\n      transform: 'translateY(0) scale(1)'\n    },\n    '50%': {\n      transform: 'translateY(-10px) scale(1.1)'\n    },\n    '100%': {\n      transform: 'translateY(0) scale(1)'\n    }\n  }\n};\nvar paperTexture = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='paperFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.4' numOctaves='5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23paperFilter)'/%3E%3C/svg%3E\")`,\n  opacity: 0.15,\n  pointerEvents: 'none',\n  zIndex: 1,\n  mixBlendMode: 'multiply'\n};\nvar noiseTexture = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E\")`,\n  opacity: 0.2,\n  pointerEvents: 'none',\n  zIndex: 2,\n  mixBlendMode: 'overlay'\n};\nvar vignetteEffect = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: 'radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.2) 100%)',\n  pointerEvents: 'none',\n  zIndex: 3\n};\nvar getRandomAnimationParams = function getRandomAnimationParams() {\n  var delay = Math.random() * 2;\n  var duration = 3 + Math.random() * 2;\n  var xOffset = (Math.random() - 0.5) * 4;\n  var yOffset = (Math.random() - 0.5) * 4;\n  var rotation = (Math.random() - 0.5) * 2;\n  return {\n    delay: delay,\n    duration: duration,\n    xOffset: xOffset,\n    yOffset: yOffset,\n    rotation: rotation\n  };\n};\nvar tiny5FontStyle = {\n  fontFamily: '\"Tiny5\", sans-serif',\n  letterSpacing: '0.05em'\n};\nvar GameBoard = function GameBoard() {\n  var players = useSelector(function (state) {\n    return state.game.players;\n  });\n  var properties = useSelector(function (state) {\n    return state.game.properties;\n  });\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    animatingPlayers = _useState2[0],\n    setAnimatingPlayers = _useState2[1];\n  var getPropertyAtPosition = function getPropertyAtPosition(position) {\n    return properties.find(function (p) {\n      return p.position === position;\n    });\n  };\n  var getPlayersAtPosition = function getPlayersAtPosition(position) {\n    return players.filter(function (p) {\n      return p.position === position;\n    });\n  };\n  useEffect(function () {\n    players.forEach(function (player) {\n      if (player.position !== undefined) {\n        var currentPosition = player.position;\n        var previousPosition = player.previousPosition || 0;\n        var path = [];\n        if (currentPosition > previousPosition) {\n          for (var i = previousPosition; i <= currentPosition; i++) {\n            path.push(i);\n          }\n        } else if (currentPosition < previousPosition) {\n          for (var _i = previousPosition; _i < 40; _i++) {\n            path.push(_i);\n          }\n          for (var _i2 = 0; _i2 <= currentPosition; _i2++) {\n            path.push(_i2);\n          }\n        }\n        setAnimatingPlayers(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, player.id, {\n            isAnimating: true,\n            path: path\n          }));\n        });\n        path.forEach(function (pos, index) {\n          setTimeout(function () {\n            setAnimatingPlayers(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, player.id, _objectSpread(_objectSpread({}, prev[player.id]), {}, {\n                currentPathIndex: index\n              })));\n            });\n          }, index * 300);\n        });\n        setTimeout(function () {\n          setAnimatingPlayers(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, player.id, {\n              isAnimating: false,\n              path: []\n            }));\n          });\n        }, path.length * 300);\n      }\n    });\n  }, [players]);\n  var renderBoardCell = function renderBoardCell(position) {\n    var _players$find;\n    var property = getPropertyAtPosition(position);\n    var playersHere = getPlayersAtPosition(position);\n    var _getRandomAnimationPa = getRandomAnimationParams(),\n      delay = _getRandomAnimationPa.delay,\n      duration = _getRandomAnimationPa.duration,\n      xOffset = _getRandomAnimationPa.xOffset,\n      yOffset = _getRandomAnimationPa.yOffset,\n      rotation = _getRandomAnimationPa.rotation;\n    var cellColor = (property == null ? void 0 : property.color) || '#f5f5f5';\n    var cellContent;\n    var cellLabel = '';\n    var cellTextColor = undefined;\n    if (position === 0) {\n      cellLabel = 'GO';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 10) {\n      cellLabel = 'JAIL';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 20) {\n      cellLabel = 'FREE PARKING';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 30) {\n      cellLabel = 'GO TO JAIL';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if ([2, 17, 33].includes(position)) {\n      cellLabel = 'COMMUNITY CHEST';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if ([7, 22, 36].includes(position)) {\n      cellLabel = 'CHANCE';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 4) {\n      cellLabel = 'INCOME TAX';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 38) {\n      cellLabel = 'LUXURY TAX';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if ([5, 15, 25, 35].includes(position)) {\n      cellLabel = (property == null ? void 0 : property.name) || '';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = '#E0E0E0';\n    } else if ([12, 28].includes(position)) {\n      cellLabel = (property == null ? void 0 : property.name) || '';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = '#E0E0E0';\n    } else if (property) {\n      cellLabel = property.name;\n    }\n    return _jsxs(Paper, {\n      elevation: 2,\n      sx: {\n        p: 0.5,\n        height: '100%',\n        width: '100%',\n        backgroundColor: property != null && property.owner ? `${cellColor}80` : cellColor,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        position: 'relative',\n        border: property != null && property.owner ? `2px solid ${((_players$find = players.find(function (p) {\n          return p.id === property.owner;\n        })) == null ? void 0 : _players$find.color) || '#ccc'}` : 'none',\n        fontSize: '0.7rem',\n        overflow: 'hidden',\n        transition: 'all 0.3s ease-in-out',\n        transform: 'translate(0, 0) rotate(0deg)',\n        animation: `float ${duration}s ease-in-out ${delay}s infinite`,\n        '&:hover': {\n          transform: `translate(${xOffset}px, -4px) rotate(${rotation}deg)`,\n          boxShadow: '0 8px 16px rgba(0,0,0,0.2)',\n          zIndex: 2,\n          '&::before': {\n            opacity: 0.1\n          }\n        },\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\n          opacity: 0,\n          transition: 'opacity 0.3s ease-in-out',\n          pointerEvents: 'none'\n        },\n        backdropFilter: 'blur(1px)'\n      },\n      children: [_jsx(Typography, {\n        variant: \"caption\",\n        sx: _objectSpread({\n          fontSize: '0.85rem',\n          fontWeight: 'bold',\n          lineHeight: 1.2,\n          mb: 0.5,\n          whiteSpace: 'normal',\n          color: cellTextColor\n        }, position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\n        children: cellLabel\n      }), property && _jsxs(Typography, {\n        variant: \"caption\",\n        sx: _objectSpread({\n          fontSize: '0.75rem',\n          fontWeight: 'bold',\n          lineHeight: 1.2,\n          color: cellTextColor\n        }, position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\n        children: [\"$\", property.price]\n      }), playersHere.length > 0 && _jsx(Box, {\n        sx: {\n          position: 'absolute',\n          bottom: 0,\n          right: 0,\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 0.25,\n          p: 0.25,\n          maxWidth: '100%',\n          justifyContent: 'flex-end'\n        },\n        children: playersHere.map(function (player) {\n          var _animatingPlayers$pla, _animatingPlayers$pla2, _animatingPlayers$pla3;\n          var isAnimating = (_animatingPlayers$pla = animatingPlayers[player.id]) == null ? void 0 : _animatingPlayers$pla.isAnimating;\n          var currentPathIndex = (_animatingPlayers$pla2 = animatingPlayers[player.id]) == null ? void 0 : _animatingPlayers$pla2.currentPathIndex;\n          var isCurrentPosition = currentPathIndex !== undefined && ((_animatingPlayers$pla3 = animatingPlayers[player.id]) == null ? void 0 : _animatingPlayers$pla3.path[currentPathIndex]) === position;\n          return _jsx(Avatar, {\n            sx: {\n              width: 32,\n              height: 32,\n              bgcolor: player.color || '#ccc',\n              fontSize: '1rem',\n              border: '2px solid #fff',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              transition: 'all 0.3s ease-in-out',\n              animation: isCurrentPosition ? 'bounce 0.3s ease-in-out' : 'none',\n              '&:hover': {\n                transform: 'scale(1.1)',\n                transition: 'transform 0.2s'\n              }\n            },\n            children: player.tokenIcon || player.name.charAt(0)\n          }, player.id);\n        })\n      })]\n    });\n  };\n  var getSpiralPosition = function getSpiralPosition(row, col) {\n    if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\n      return null;\n    }\n    if (row === BOARD_SIZE - 1) {\n      return col;\n    } else if (col === BOARD_SIZE - 1) {\n      return 10 + (BOARD_SIZE - 1 - row);\n    } else if (row === 0) {\n      return 20 + (BOARD_SIZE - 1 - col);\n    } else {\n      return 30 + row;\n    }\n  };\n  return _jsx(Box, {\n    sx: _objectSpread(_objectSpread({\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      p: 1,\n      bgcolor: THEME_COLORS.background,\n      position: 'relative',\n      '&::before': _objectSpread({\n        content: '\"\"'\n      }, paperTexture),\n      '&::after': _objectSpread({\n        content: '\"\"'\n      }, noiseTexture)\n    }, bounceAnimation), {}, {\n      '@keyframes float': {\n        '0%': {\n          transform: 'translate(0, 0) rotate(0deg)'\n        },\n        '25%': {\n          transform: 'translate(2px, -2px) rotate(0.5deg)'\n        },\n        '50%': {\n          transform: 'translate(0, -3px) rotate(0deg)'\n        },\n        '75%': {\n          transform: 'translate(-2px, -2px) rotate(-0.5deg)'\n        },\n        '100%': {\n          transform: 'translate(0, 0) rotate(0deg)'\n        }\n      }\n    }),\n    children: _jsx(Box, {\n      sx: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        display: 'grid',\n        gridTemplateColumns: `repeat(${BOARD_SIZE}, 1fr)`,\n        gridTemplateRows: `repeat(${BOARD_SIZE}, 1fr)`,\n        p: 1,\n        backgroundColor: THEME_COLORS.background,\n        borderRadius: 1,\n        boxSizing: 'border-box',\n        position: 'relative',\n        '&::after': _objectSpread({\n          content: '\"\"'\n        }, vignetteEffect)\n      },\n      children: Array.from({\n        length: BOARD_SIZE * BOARD_SIZE\n      }).map(function (_, index) {\n        var row = Math.floor(index / BOARD_SIZE);\n        var col = index % BOARD_SIZE;\n        var position = getSpiralPosition(row, col);\n        var isOuterCell = row === 0 || row === BOARD_SIZE - 1 || col === 0 || col === BOARD_SIZE - 1;\n        if (position !== null) {\n          return _jsx(Box, {\n            sx: {\n              width: '100%',\n              height: '100%',\n              p: isOuterCell ? 0.25 : 0\n            },\n            children: renderBoardCell(position)\n          }, index);\n        }\n        if (row === 1 && col === 1) {\n          return _jsx(Box, {\n            sx: {\n              width: '100%',\n              height: '100%',\n              bgcolor: THEME_COLORS.background,\n              gridColumn: '2 / -2',\n              gridRow: '2 / -2',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              position: 'relative'\n            },\n            children: _jsxs(Typography, {\n              variant: \"h1\",\n              sx: _objectSpread({\n                fontSize: {\n                  xs: '8rem',\n                  sm: '8rem',\n                  md: '8rem'\n                },\n                fontWeight: 'bold',\n                color: THEME_COLORS.card_text,\n                textAlign: 'center',\n                textShadow: '2px 2px 4px rgba(0,0,0,0.2)'\n              }, tiny5FontStyle),\n              children: [\"Monopoly\", _jsx(\"br\", {}), \"Automata\"]\n            })\n          }, index);\n        }\n        if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\n          return null;\n        }\n        return _jsx(Box, {\n          sx: {\n            width: '100%',\n            height: '100%',\n            bgcolor: THEME_COLORS.background\n          }\n        }, index);\n      })\n    })\n  });\n};\nexport default GameBoard;","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Avatar","useSelector","THEME_COLORS","jsx","_jsx","jsxs","_jsxs","BOARD_SIZE","bounceAnimation","transform","paperTexture","position","top","left","right","bottom","backgroundImage","opacity","pointerEvents","zIndex","mixBlendMode","noiseTexture","vignetteEffect","background","getRandomAnimationParams","delay","Math","random","duration","xOffset","yOffset","rotation","tiny5FontStyle","fontFamily","letterSpacing","GameBoard","players","state","game","properties","_useState","_useState2","_slicedToArray","animatingPlayers","setAnimatingPlayers","getPropertyAtPosition","find","p","getPlayersAtPosition","filter","forEach","player","undefined","currentPosition","previousPosition","path","i","push","prev","_objectSpread","_defineProperty","id","isAnimating","pos","index","setTimeout","currentPathIndex","length","renderBoardCell","_players$find","property","playersHere","_getRandomAnimationPa","cellColor","color","cellContent","cellLabel","cellTextColor","spcl_cards","card_text","includes","name","elevation","sx","height","width","backgroundColor","owner","display","flexDirection","justifyContent","border","fontSize","overflow","transition","animation","boxShadow","content","backdropFilter","children","variant","fontWeight","lineHeight","mb","whiteSpace","price","flexWrap","gap","maxWidth","map","_animatingPlayers$pla","_animatingPlayers$pla2","_animatingPlayers$pla3","isCurrentPosition","bgcolor","alignItems","tokenIcon","charAt","getSpiralPosition","row","col","flex","gridTemplateColumns","gridTemplateRows","borderRadius","boxSizing","Array","from","_","floor","isOuterCell","gridColumn","gridRow","xs","sm","md","textAlign","textShadow"],"sources":["C:/Users/janu3/GitHub/Monopoly_Automator/monopoly-voice-automation/src/components/GameBoard/GameBoard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Typography, Avatar } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { Property, AnimationState } from '../../types/gameTypes';\r\nimport { THEME_COLORS } from '../../theme/colors';\r\n\r\n// Complete set of Monopoly properties\r\nconst BOARD_SIZE = 11; // 11x11 grid for the board\r\n\r\n// Animation keyframes for player movement\r\nconst bounceAnimation = {\r\n    '@keyframes bounce': {\r\n        '0%': {\r\n            transform: 'translateY(0) scale(1)',\r\n        },\r\n        '50%': {\r\n            transform: 'translateY(-10px) scale(1.1)',\r\n        },\r\n        '100%': {\r\n            transform: 'translateY(0) scale(1)',\r\n        },\r\n    },\r\n};\r\n\r\n// Paper texture styles\r\nconst paperTexture = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='paperFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.4' numOctaves='5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23paperFilter)'/%3E%3C/svg%3E\")`,\r\n    opacity: 0.15,\r\n    pointerEvents: 'none',\r\n    zIndex: 1,\r\n    mixBlendMode: 'multiply',\r\n};\r\n\r\n// Enhanced noise texture styles\r\nconst noiseTexture = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E\")`,\r\n    opacity: 0.2,\r\n    pointerEvents: 'none',\r\n    zIndex: 2,\r\n    mixBlendMode: 'overlay',\r\n};\r\n\r\n// Vignette effect\r\nconst vignetteEffect = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    background: 'radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.2) 100%)',\r\n    pointerEvents: 'none',\r\n    zIndex: 3,\r\n};\r\n\r\n// Generate random animation parameters for each card\r\nconst getRandomAnimationParams = () => {\r\n    const delay = Math.random() * 2;\r\n    const duration = 3 + Math.random() * 2; // Random duration between 3-5s\r\n    const xOffset = (Math.random() - 0.5) * 4; // Random X movement\r\n    const yOffset = (Math.random() - 0.5) * 4; // Random Y movement\r\n    const rotation = (Math.random() - 0.5) * 2; // Random rotation\r\n    return { delay, duration, xOffset, yOffset, rotation };\r\n};\r\n\r\n// Tiny5 font styles\r\nconst tiny5FontStyle = {\r\n    fontFamily: '\"Tiny5\", sans-serif',\r\n    letterSpacing: '0.05em',\r\n};\r\n\r\nconst GameBoard: React.FC = () => {\r\n    const players = useSelector((state: RootState) => state.game.players);\r\n    const properties = useSelector((state: RootState) => state.game.properties);\r\n    const [animatingPlayers, setAnimatingPlayers] = useState<{ [key: string]: AnimationState }>({});\r\n\r\n    // Helper function to get property at a specific position\r\n    const getPropertyAtPosition = (position: number) => {\r\n        return properties.find(p => p.position === position);\r\n    };\r\n\r\n    // Helper function to get players at a specific position\r\n    const getPlayersAtPosition = (position: number) => {\r\n        return players.filter(p => p.position === position);\r\n    };\r\n\r\n    // Watch for player position changes and trigger animations\r\n    useEffect(() => {\r\n        players.forEach(player => {\r\n            if (player.position !== undefined) {\r\n                const currentPosition = player.position;\r\n                const previousPosition = player.previousPosition || 0;\r\n\r\n                // Calculate the path the player should take\r\n                let path: number[] = [];\r\n                if (currentPosition > previousPosition) {\r\n                    // Moving forward\r\n                    for (let i = previousPosition; i <= currentPosition; i++) {\r\n                        path.push(i);\r\n                    }\r\n                } else if (currentPosition < previousPosition) {\r\n                    // Moving backward or wrapping around\r\n                    for (let i = previousPosition; i < 40; i++) {\r\n                        path.push(i);\r\n                    }\r\n                    for (let i = 0; i <= currentPosition; i++) {\r\n                        path.push(i);\r\n                    }\r\n                }\r\n\r\n                // Start the animation sequence\r\n                setAnimatingPlayers(prev => ({\r\n                    ...prev,\r\n                    [player.id]: { isAnimating: true, path }\r\n                }));\r\n\r\n                // Animate through each position in the path\r\n                path.forEach((pos, index) => {\r\n                    setTimeout(() => {\r\n                        setAnimatingPlayers(prev => ({\r\n                            ...prev,\r\n                            [player.id]: {\r\n                                ...prev[player.id],\r\n                                currentPathIndex: index\r\n                            }\r\n                        }));\r\n                    }, index * 300); // 300ms between each position\r\n                });\r\n\r\n                // Clear animation state after the entire path is complete\r\n                setTimeout(() => {\r\n                    setAnimatingPlayers(prev => ({\r\n                        ...prev,\r\n                        [player.id]: { isAnimating: false, path: [] }\r\n                    }));\r\n                }, path.length * 300);\r\n            }\r\n        });\r\n    }, [players]);\r\n\r\n    // Update the cell rendering\r\n    const renderBoardCell = (position: number) => {\r\n        const property = getPropertyAtPosition(position);\r\n        const playersHere = getPlayersAtPosition(position);\r\n        const { delay, duration, xOffset, yOffset, rotation } = getRandomAnimationParams();\r\n\r\n        let cellColor = property?.color || '#f5f5f5';\r\n\r\n        // Special cells (corners, chance, community chest, etc.)\r\n        let cellContent;\r\n        let cellLabel = '';\r\n        let cellTextColor = undefined;\r\n\r\n        if (position === 0) {\r\n            cellLabel = 'GO';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 10) {\r\n            cellLabel = 'JAIL';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 20) {\r\n            cellLabel = 'FREE PARKING';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 30) {\r\n            cellLabel = 'GO TO JAIL';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if ([2, 17, 33].includes(position)) {\r\n            cellLabel = 'COMMUNITY CHEST';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if ([7, 22, 36].includes(position)) {\r\n            cellLabel = 'CHANCE';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 4) {\r\n            cellLabel = 'INCOME TAX';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 38) {\r\n            cellLabel = 'LUXURY TAX';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if ([5, 15, 25, 35].includes(position)) {\r\n            // Railroad cards\r\n            cellLabel = property?.name || '';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = '#E0E0E0'; // Light grey for railroads\r\n        } else if ([12, 28].includes(position)) {\r\n            // Utility cards\r\n            cellLabel = property?.name || '';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = '#E0E0E0'; // Light grey for utilities\r\n        } else if (property) {\r\n            cellLabel = property.name;\r\n        }\r\n\r\n        return (\r\n            <Paper\r\n                elevation={2}\r\n                sx={{\r\n                    p: 0.5,\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    backgroundColor: property?.owner ? `${cellColor}80` : cellColor,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'space-between',\r\n                    position: 'relative',\r\n                    border: property?.owner ? `2px solid ${players.find(p => p.id === property.owner)?.color || '#ccc'}` : 'none',\r\n                    fontSize: '0.7rem',\r\n                    overflow: 'hidden',\r\n                    transition: 'all 0.3s ease-in-out',\r\n                    transform: 'translate(0, 0) rotate(0deg)',\r\n                    animation: `float ${duration}s ease-in-out ${delay}s infinite`,\r\n                    '&:hover': {\r\n                        transform: `translate(${xOffset}px, -4px) rotate(${rotation}deg)`,\r\n                        boxShadow: '0 8px 16px rgba(0,0,0,0.2)',\r\n                        zIndex: 2,\r\n                        '&::before': {\r\n                            opacity: 0.1,\r\n                        },\r\n                    },\r\n                    '&::before': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        background: 'linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n                        opacity: 0,\r\n                        transition: 'opacity 0.3s ease-in-out',\r\n                        pointerEvents: 'none',\r\n                    },\r\n                    backdropFilter: 'blur(1px)',\r\n                }}\r\n            >\r\n                <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                        fontSize: '0.85rem',\r\n                        fontWeight: 'bold',\r\n                        lineHeight: 1.2,\r\n                        mb: 0.5,\r\n                        whiteSpace: 'normal',\r\n                        color: cellTextColor,\r\n                        ...(position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\r\n                    }}\r\n                >\r\n                    {cellLabel}\r\n                </Typography>\r\n\r\n                {property && (\r\n                    <Typography\r\n                        variant=\"caption\"\r\n                        sx={{\r\n                            fontSize: '0.75rem',\r\n                            fontWeight: 'bold',\r\n                            lineHeight: 1.2,\r\n                            color: cellTextColor,\r\n                            ...(position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\r\n                        }}\r\n                    >\r\n                        ${property.price}\r\n                    </Typography>\r\n                )}\r\n\r\n                {playersHere.length > 0 && (\r\n                    <Box sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        right: 0,\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        gap: 0.25,\r\n                        p: 0.25,\r\n                        maxWidth: '100%',\r\n                        justifyContent: 'flex-end'\r\n                    }}>\r\n                        {playersHere.map(player => {\r\n                            const isAnimating = animatingPlayers[player.id]?.isAnimating;\r\n                            const currentPathIndex = animatingPlayers[player.id]?.currentPathIndex;\r\n                            const isCurrentPosition = currentPathIndex !== undefined &&\r\n                                animatingPlayers[player.id]?.path[currentPathIndex] === position;\r\n\r\n                            return (\r\n                                <Avatar\r\n                                    key={player.id}\r\n                                    sx={{\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        bgcolor: player.color || '#ccc',\r\n                                        fontSize: '1rem',\r\n                                        border: '2px solid #fff',\r\n                                        boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        fontWeight: 'bold',\r\n                                        transition: 'all 0.3s ease-in-out',\r\n                                        animation: isCurrentPosition ? 'bounce 0.3s ease-in-out' : 'none',\r\n                                        '&:hover': {\r\n                                            transform: 'scale(1.1)',\r\n                                            transition: 'transform 0.2s'\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {player.tokenIcon || player.name.charAt(0)}\r\n                                </Avatar>\r\n                            );\r\n                        })}\r\n                    </Box>\r\n                )}\r\n            </Paper>\r\n        );\r\n    };\r\n\r\n    // Helper function to get the spiral position for a grid cell\r\n    const getSpiralPosition = (row: number, col: number): number | null => {\r\n        // Return null for center cells\r\n        if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\r\n            return null;\r\n        }\r\n\r\n        // Start from GO (bottom-left corner) and move clockwise\r\n        if (row === BOARD_SIZE - 1) {\r\n            // Bottom row (left to right: 0-10)\r\n            return col;\r\n        } else if (col === BOARD_SIZE - 1) {\r\n            // Right column (bottom to top: 11-19)\r\n            return 10 + (BOARD_SIZE - 1 - row);\r\n        } else if (row === 0) {\r\n            // Top row (right to left: 20-30)\r\n            return 20 + (BOARD_SIZE - 1 - col);\r\n        } else { // col === 0\r\n            // Left column (top to bottom: 31-39)\r\n            return 30 + row;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            p: 1,\r\n            bgcolor: THEME_COLORS.background,\r\n            position: 'relative',\r\n            '&::before': {\r\n                content: '\"\"',\r\n                ...paperTexture,\r\n            },\r\n            '&::after': {\r\n                content: '\"\"',\r\n                ...noiseTexture,\r\n            },\r\n            ...bounceAnimation,\r\n            '@keyframes float': {\r\n                '0%': {\r\n                    transform: 'translate(0, 0) rotate(0deg)',\r\n                },\r\n                '25%': {\r\n                    transform: 'translate(2px, -2px) rotate(0.5deg)',\r\n                },\r\n                '50%': {\r\n                    transform: 'translate(0, -3px) rotate(0deg)',\r\n                },\r\n                '75%': {\r\n                    transform: 'translate(-2px, -2px) rotate(-0.5deg)',\r\n                },\r\n                '100%': {\r\n                    transform: 'translate(0, 0) rotate(0deg)',\r\n                },\r\n            },\r\n        }}>\r\n            <Box\r\n                sx={{\r\n                    flex: 1,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'grid',\r\n                    gridTemplateColumns: `repeat(${BOARD_SIZE}, 1fr)`,\r\n                    gridTemplateRows: `repeat(${BOARD_SIZE}, 1fr)`,\r\n                    p: 1,\r\n                    backgroundColor: THEME_COLORS.background,\r\n                    borderRadius: 1,\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative',\r\n                    '&::after': {\r\n                        content: '\"\"',\r\n                        ...vignetteEffect,\r\n                    },\r\n                }}\r\n            >\r\n                {Array.from({ length: BOARD_SIZE * BOARD_SIZE }).map((_, index) => {\r\n                    const row = Math.floor(index / BOARD_SIZE);\r\n                    const col = index % BOARD_SIZE;\r\n                    const position = getSpiralPosition(row, col);\r\n                    const isOuterCell = row === 0 || row === BOARD_SIZE - 1 || col === 0 || col === BOARD_SIZE - 1;\r\n\r\n                    if (position !== null) {\r\n                        return (\r\n                            <Box key={index} sx={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                p: isOuterCell ? 0.25 : 0\r\n                            }}>\r\n                                {renderBoardCell(position)}\r\n                            </Box>\r\n                        );\r\n                    }\r\n\r\n                    // For inner cells, create a single merged background with centered logo\r\n                    if (row === 1 && col === 1) {\r\n                        return (\r\n                            <Box key={index} sx={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                bgcolor: THEME_COLORS.background,\r\n                                gridColumn: '2 / -2',\r\n                                gridRow: '2 / -2',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                position: 'relative',\r\n                            }}>\r\n                                <Typography\r\n                                    variant=\"h1\"\r\n                                    sx={{\r\n                                        fontSize: { xs: '8rem', sm: '8rem', md: '8rem' },\r\n                                        fontWeight: 'bold',\r\n                                        color: THEME_COLORS.card_text,\r\n                                        textAlign: 'center',\r\n                                        textShadow: '2px 2px 4px rgba(0,0,0,0.2)',\r\n                                        ...tiny5FontStyle,\r\n                                    }}\r\n                                >\r\n                                    Monopoly\r\n                                    <br />\r\n                                    Automata\r\n                                </Typography>\r\n                            </Box>\r\n                        );\r\n                    }\r\n\r\n                    // Skip rendering other inner cells as they're covered by the merged cell\r\n                    if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\r\n                        return null;\r\n                    }\r\n\r\n                    return (\r\n                        <Box key={index} sx={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            bgcolor: THEME_COLORS.background\r\n                        }} />\r\n                    );\r\n                })}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}