{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janu3\\\\GitHub\\\\Monopoly_Automator\\\\monopoly-voice-automation\\\\src\\\\components\\\\GameBoard\\\\GameBoard.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Box, Paper, Typography, Avatar } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { THEME_COLORS } from '../../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 11;\nconst bounceAnimation = {\n  '@keyframes bounce': {\n    '0%': {\n      transform: 'translateY(0) scale(1)'\n    },\n    '50%': {\n      transform: 'translateY(-10px) scale(1.1)'\n    },\n    '100%': {\n      transform: 'translateY(0) scale(1)'\n    }\n  }\n};\nconst paperTexture = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='paperFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.4' numOctaves='5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23paperFilter)'/%3E%3C/svg%3E\")`,\n  opacity: 0.15,\n  pointerEvents: 'none',\n  zIndex: 1,\n  mixBlendMode: 'multiply'\n};\nconst noiseTexture = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E\")`,\n  opacity: 0.2,\n  pointerEvents: 'none',\n  zIndex: 2,\n  mixBlendMode: 'overlay'\n};\nconst vignetteEffect = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: 'radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.2) 100%)',\n  pointerEvents: 'none',\n  zIndex: 3\n};\nconst getRandomAnimationParams = () => {\n  const delay = Math.random() * 2;\n  const duration = 3 + Math.random() * 2;\n  const xOffset = (Math.random() - 0.5) * 4;\n  const yOffset = (Math.random() - 0.5) * 4;\n  const rotation = (Math.random() - 0.5) * 2;\n  return {\n    delay,\n    duration,\n    xOffset,\n    yOffset,\n    rotation\n  };\n};\nconst tiny5FontStyle = {\n  fontFamily: '\"Tiny5\", sans-serif',\n  letterSpacing: '0.05em'\n};\nconst GameBoard = () => {\n  const players = useSelector(state => state.game.players);\n  const properties = useSelector(state => state.game.properties);\n  const [animatingPlayers, setAnimatingPlayers] = useState({});\n  const getPropertyAtPosition = position => {\n    return properties.find(p => p.position === position);\n  };\n  const getPlayersAtPosition = position => {\n    return players.filter(p => p.position === position);\n  };\n  useEffect(() => {\n    players.forEach(player => {\n      if (player.position !== undefined) {\n        const currentPosition = player.position;\n        const previousPosition = player.previousPosition || 0;\n        let path = [];\n        if (currentPosition > previousPosition) {\n          for (let i = previousPosition; i <= currentPosition; i++) {\n            path.push(i);\n          }\n        } else if (currentPosition < previousPosition) {\n          for (let i = previousPosition; i < 40; i++) {\n            path.push(i);\n          }\n          for (let i = 0; i <= currentPosition; i++) {\n            path.push(i);\n          }\n        }\n        setAnimatingPlayers(prev => Object.assign({}, prev, {\n          [player.id]: {\n            isAnimating: true,\n            path\n          }\n        }));\n        path.forEach((pos, index) => {\n          setTimeout(() => {\n            setAnimatingPlayers(prev => Object.assign({}, prev, {\n              [player.id]: Object.assign({}, prev[player.id], {\n                currentPathIndex: index\n              })\n            }));\n          }, index * 300);\n        });\n        setTimeout(() => {\n          setAnimatingPlayers(prev => Object.assign({}, prev, {\n            [player.id]: {\n              isAnimating: false,\n              path: []\n            }\n          }));\n        }, path.length * 300);\n      }\n    });\n  }, [players]);\n  const renderBoardCell = position => {\n    const property = getPropertyAtPosition(position);\n    const playersHere = getPlayersAtPosition(position);\n    const {\n      delay,\n      duration,\n      xOffset,\n      yOffset,\n      rotation\n    } = getRandomAnimationParams();\n    let cellColor = property?.color || '#f5f5f5';\n    let cellContent;\n    let cellLabel = '';\n    let cellTextColor = undefined;\n    if (position === 0) {\n      cellLabel = 'GO';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 10) {\n      cellLabel = 'JAIL';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 20) {\n      cellLabel = 'FREE PARKING';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 30) {\n      cellLabel = 'GO TO JAIL';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if ([2, 17, 33].includes(position)) {\n      cellLabel = 'COMMUNITY CHEST';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if ([7, 22, 36].includes(position)) {\n      cellLabel = 'CHANCE';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 4) {\n      cellLabel = 'INCOME TAX';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if (position === 38) {\n      cellLabel = 'LUXURY TAX';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = THEME_COLORS.card_text;\n    } else if ([5, 15, 25, 35].includes(position)) {\n      cellLabel = property?.name || '';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = '#E0E0E0';\n    } else if ([12, 28].includes(position)) {\n      cellLabel = property?.name || '';\n      cellColor = THEME_COLORS.spcl_cards;\n      cellTextColor = '#E0E0E0';\n    } else if (property) {\n      cellLabel = property.name;\n    }\n    return _jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 0.5,\n        height: '100%',\n        width: '100%',\n        backgroundColor: property?.owner ? `${cellColor}80` : cellColor,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        position: 'relative',\n        border: property?.owner ? `2px solid ${players.find(p => p.id === property.owner)?.color || '#ccc'}` : 'none',\n        fontSize: '0.7rem',\n        overflow: 'hidden',\n        transition: 'all 0.3s ease-in-out',\n        transform: 'translate(0, 0) rotate(0deg)',\n        animation: `float ${duration}s ease-in-out ${delay}s infinite`,\n        '&:hover': {\n          transform: `translate(${xOffset}px, -4px) rotate(${rotation}deg)`,\n          boxShadow: '0 8px 16px rgba(0,0,0,0.2)',\n          zIndex: 2,\n          '&::before': {\n            opacity: 0.1\n          }\n        },\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\n          opacity: 0,\n          transition: 'opacity 0.3s ease-in-out',\n          pointerEvents: 'none'\n        },\n        backdropFilter: 'blur(1px)'\n      },\n      children: [_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: Object.assign({\n          fontSize: '0.85rem',\n          fontWeight: 'bold',\n          lineHeight: 1.2,\n          mb: 0.5,\n          whiteSpace: 'normal',\n          color: cellTextColor\n        }, position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\n        children: cellLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), property && _jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: Object.assign({\n          fontSize: '0.75rem',\n          fontWeight: 'bold',\n          lineHeight: 1.2,\n          color: cellTextColor\n        }, position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\n        children: [\"$\", property.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this), playersHere.length > 0 && _jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          bottom: 0,\n          right: 0,\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 0.25,\n          p: 0.25,\n          maxWidth: '100%',\n          justifyContent: 'flex-end'\n        },\n        children: playersHere.map(player => {\n          const isAnimating = animatingPlayers[player.id]?.isAnimating;\n          const currentPathIndex = animatingPlayers[player.id]?.currentPathIndex;\n          const isCurrentPosition = currentPathIndex !== undefined && animatingPlayers[player.id]?.path[currentPathIndex] === position;\n          return _jsxDEV(Avatar, {\n            sx: {\n              width: 32,\n              height: 32,\n              bgcolor: player.color || '#ccc',\n              fontSize: '1rem',\n              border: '2px solid #fff',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              transition: 'all 0.3s ease-in-out',\n              animation: isCurrentPosition ? 'bounce 0.3s ease-in-out' : 'none',\n              '&:hover': {\n                transform: 'scale(1.1)',\n                transition: 'transform 0.2s'\n              }\n            },\n            children: player.tokenIcon || player.name.charAt(0)\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this);\n  };\n  const getSpiralPosition = (row, col) => {\n    if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\n      return null;\n    }\n    if (row === BOARD_SIZE - 1) {\n      return col;\n    } else if (col === BOARD_SIZE - 1) {\n      return 10 + (BOARD_SIZE - 1 - row);\n    } else if (row === 0) {\n      return 20 + (BOARD_SIZE - 1 - col);\n    } else {\n      return 30 + row;\n    }\n  };\n  return _jsxDEV(Box, {\n    sx: Object.assign({\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      p: 1,\n      bgcolor: THEME_COLORS.background,\n      position: 'relative',\n      '&::before': Object.assign({\n        content: '\"\"'\n      }, paperTexture),\n      '&::after': Object.assign({\n        content: '\"\"'\n      }, noiseTexture)\n    }, bounceAnimation, {\n      '@keyframes float': {\n        '0%': {\n          transform: 'translate(0, 0) rotate(0deg)'\n        },\n        '25%': {\n          transform: 'translate(2px, -2px) rotate(0.5deg)'\n        },\n        '50%': {\n          transform: 'translate(0, -3px) rotate(0deg)'\n        },\n        '75%': {\n          transform: 'translate(-2px, -2px) rotate(-0.5deg)'\n        },\n        '100%': {\n          transform: 'translate(0, 0) rotate(0deg)'\n        }\n      }\n    }),\n    children: _jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        display: 'grid',\n        gridTemplateColumns: `repeat(${BOARD_SIZE}, 1fr)`,\n        gridTemplateRows: `repeat(${BOARD_SIZE}, 1fr)`,\n        p: 1,\n        backgroundColor: THEME_COLORS.background,\n        borderRadius: 1,\n        boxSizing: 'border-box',\n        position: 'relative',\n        '&::after': Object.assign({\n          content: '\"\"'\n        }, vignetteEffect)\n      },\n      children: Array.from({\n        length: BOARD_SIZE * BOARD_SIZE\n      }).map((_, index) => {\n        const row = Math.floor(index / BOARD_SIZE);\n        const col = index % BOARD_SIZE;\n        const position = getSpiralPosition(row, col);\n        const isOuterCell = row === 0 || row === BOARD_SIZE - 1 || col === 0 || col === BOARD_SIZE - 1;\n        if (position !== null) {\n          return _jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: '100%',\n              p: isOuterCell ? 0.25 : 0\n            },\n            children: renderBoardCell(position)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this);\n        }\n        if (row === 1 && col === 1) {\n          return _jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: '100%',\n              bgcolor: THEME_COLORS.background,\n              gridColumn: '2 / -2',\n              gridRow: '2 / -2',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              position: 'relative'\n            },\n            children: _jsxDEV(Typography, {\n              variant: \"h1\",\n              sx: Object.assign({\n                fontSize: {\n                  xs: '8rem',\n                  sm: '8rem',\n                  md: '8rem'\n                },\n                fontWeight: 'bold',\n                color: THEME_COLORS.card_text,\n                textAlign: 'center',\n                textShadow: '2px 2px 4px rgba(0,0,0,0.2)'\n              }, tiny5FontStyle),\n              children: [\"Monopoly\", _jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 37\n              }, this), \"Automata\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this);\n        }\n        if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\n          return null;\n        }\n        return _jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            height: '100%',\n            bgcolor: THEME_COLORS.background\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 9\n  }, this);\n};\nexport default GameBoard;","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Avatar","useSelector","THEME_COLORS","jsxDEV","_jsxDEV","BOARD_SIZE","bounceAnimation","transform","paperTexture","position","top","left","right","bottom","backgroundImage","opacity","pointerEvents","zIndex","mixBlendMode","noiseTexture","vignetteEffect","background","getRandomAnimationParams","delay","Math","random","duration","xOffset","yOffset","rotation","tiny5FontStyle","fontFamily","letterSpacing","GameBoard","players","state","game","properties","animatingPlayers","setAnimatingPlayers","getPropertyAtPosition","find","p","getPlayersAtPosition","filter","forEach","player","undefined","currentPosition","previousPosition","path","i","push","prev","Object","assign","id","isAnimating","pos","index","setTimeout","currentPathIndex","length","renderBoardCell","property","playersHere","cellColor","color","cellContent","cellLabel","cellTextColor","spcl_cards","card_text","includes","name","elevation","sx","height","width","backgroundColor","owner","display","flexDirection","justifyContent","border","fontSize","overflow","transition","animation","boxShadow","content","backdropFilter","children","variant","fontWeight","lineHeight","mb","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","price","flexWrap","gap","maxWidth","map","isCurrentPosition","bgcolor","alignItems","tokenIcon","charAt","getSpiralPosition","row","col","flex","gridTemplateColumns","gridTemplateRows","borderRadius","boxSizing","Array","from","_","floor","isOuterCell","gridColumn","gridRow","xs","sm","md","textAlign","textShadow"],"sources":["C:/Users/janu3/GitHub/Monopoly_Automator/monopoly-voice-automation/src/components/GameBoard/GameBoard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Typography, Avatar } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { Property, AnimationState } from '../../types/gameTypes';\r\nimport { THEME_COLORS } from '../../theme/colors';\r\n\r\n// Complete set of Monopoly properties\r\nconst BOARD_SIZE = 11; // 11x11 grid for the board\r\n\r\n// Animation keyframes for player movement\r\nconst bounceAnimation = {\r\n    '@keyframes bounce': {\r\n        '0%': {\r\n            transform: 'translateY(0) scale(1)',\r\n        },\r\n        '50%': {\r\n            transform: 'translateY(-10px) scale(1.1)',\r\n        },\r\n        '100%': {\r\n            transform: 'translateY(0) scale(1)',\r\n        },\r\n    },\r\n};\r\n\r\n// Paper texture styles\r\nconst paperTexture = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='paperFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.4' numOctaves='5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23paperFilter)'/%3E%3C/svg%3E\")`,\r\n    opacity: 0.15,\r\n    pointerEvents: 'none',\r\n    zIndex: 1,\r\n    mixBlendMode: 'multiply',\r\n};\r\n\r\n// Enhanced noise texture styles\r\nconst noiseTexture = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E\")`,\r\n    opacity: 0.2,\r\n    pointerEvents: 'none',\r\n    zIndex: 2,\r\n    mixBlendMode: 'overlay',\r\n};\r\n\r\n// Vignette effect\r\nconst vignetteEffect = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    background: 'radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.2) 100%)',\r\n    pointerEvents: 'none',\r\n    zIndex: 3,\r\n};\r\n\r\n// Generate random animation parameters for each card\r\nconst getRandomAnimationParams = () => {\r\n    const delay = Math.random() * 2;\r\n    const duration = 3 + Math.random() * 2; // Random duration between 3-5s\r\n    const xOffset = (Math.random() - 0.5) * 4; // Random X movement\r\n    const yOffset = (Math.random() - 0.5) * 4; // Random Y movement\r\n    const rotation = (Math.random() - 0.5) * 2; // Random rotation\r\n    return { delay, duration, xOffset, yOffset, rotation };\r\n};\r\n\r\n// Tiny5 font styles\r\nconst tiny5FontStyle = {\r\n    fontFamily: '\"Tiny5\", sans-serif',\r\n    letterSpacing: '0.05em',\r\n};\r\n\r\nconst GameBoard: React.FC = () => {\r\n    const players = useSelector((state: RootState) => state.game.players);\r\n    const properties = useSelector((state: RootState) => state.game.properties);\r\n    const [animatingPlayers, setAnimatingPlayers] = useState<{ [key: string]: AnimationState }>({});\r\n\r\n    // Helper function to get property at a specific position\r\n    const getPropertyAtPosition = (position: number) => {\r\n        return properties.find(p => p.position === position);\r\n    };\r\n\r\n    // Helper function to get players at a specific position\r\n    const getPlayersAtPosition = (position: number) => {\r\n        return players.filter(p => p.position === position);\r\n    };\r\n\r\n    // Watch for player position changes and trigger animations\r\n    useEffect(() => {\r\n        players.forEach(player => {\r\n            if (player.position !== undefined) {\r\n                const currentPosition = player.position;\r\n                const previousPosition = player.previousPosition || 0;\r\n\r\n                // Calculate the path the player should take\r\n                let path: number[] = [];\r\n                if (currentPosition > previousPosition) {\r\n                    // Moving forward\r\n                    for (let i = previousPosition; i <= currentPosition; i++) {\r\n                        path.push(i);\r\n                    }\r\n                } else if (currentPosition < previousPosition) {\r\n                    // Moving backward or wrapping around\r\n                    for (let i = previousPosition; i < 40; i++) {\r\n                        path.push(i);\r\n                    }\r\n                    for (let i = 0; i <= currentPosition; i++) {\r\n                        path.push(i);\r\n                    }\r\n                }\r\n\r\n                // Start the animation sequence\r\n                setAnimatingPlayers(prev => ({\r\n                    ...prev,\r\n                    [player.id]: { isAnimating: true, path }\r\n                }));\r\n\r\n                // Animate through each position in the path\r\n                path.forEach((pos, index) => {\r\n                    setTimeout(() => {\r\n                        setAnimatingPlayers(prev => ({\r\n                            ...prev,\r\n                            [player.id]: {\r\n                                ...prev[player.id],\r\n                                currentPathIndex: index\r\n                            }\r\n                        }));\r\n                    }, index * 300); // 300ms between each position\r\n                });\r\n\r\n                // Clear animation state after the entire path is complete\r\n                setTimeout(() => {\r\n                    setAnimatingPlayers(prev => ({\r\n                        ...prev,\r\n                        [player.id]: { isAnimating: false, path: [] }\r\n                    }));\r\n                }, path.length * 300);\r\n            }\r\n        });\r\n    }, [players]);\r\n\r\n    // Update the cell rendering\r\n    const renderBoardCell = (position: number) => {\r\n        const property = getPropertyAtPosition(position);\r\n        const playersHere = getPlayersAtPosition(position);\r\n        const { delay, duration, xOffset, yOffset, rotation } = getRandomAnimationParams();\r\n\r\n        let cellColor = property?.color || '#f5f5f5';\r\n\r\n        // Special cells (corners, chance, community chest, etc.)\r\n        let cellContent;\r\n        let cellLabel = '';\r\n        let cellTextColor = undefined;\r\n\r\n        if (position === 0) {\r\n            cellLabel = 'GO';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 10) {\r\n            cellLabel = 'JAIL';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 20) {\r\n            cellLabel = 'FREE PARKING';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 30) {\r\n            cellLabel = 'GO TO JAIL';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if ([2, 17, 33].includes(position)) {\r\n            cellLabel = 'COMMUNITY CHEST';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if ([7, 22, 36].includes(position)) {\r\n            cellLabel = 'CHANCE';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 4) {\r\n            cellLabel = 'INCOME TAX';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if (position === 38) {\r\n            cellLabel = 'LUXURY TAX';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = THEME_COLORS.card_text;\r\n        } else if ([5, 15, 25, 35].includes(position)) {\r\n            // Railroad cards\r\n            cellLabel = property?.name || '';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = '#E0E0E0'; // Light grey for railroads\r\n        } else if ([12, 28].includes(position)) {\r\n            // Utility cards\r\n            cellLabel = property?.name || '';\r\n            cellColor = THEME_COLORS.spcl_cards;\r\n            cellTextColor = '#E0E0E0'; // Light grey for utilities\r\n        } else if (property) {\r\n            cellLabel = property.name;\r\n        }\r\n\r\n        return (\r\n            <Paper\r\n                elevation={2}\r\n                sx={{\r\n                    p: 0.5,\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    backgroundColor: property?.owner ? `${cellColor}80` : cellColor,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'space-between',\r\n                    position: 'relative',\r\n                    border: property?.owner ? `2px solid ${players.find(p => p.id === property.owner)?.color || '#ccc'}` : 'none',\r\n                    fontSize: '0.7rem',\r\n                    overflow: 'hidden',\r\n                    transition: 'all 0.3s ease-in-out',\r\n                    transform: 'translate(0, 0) rotate(0deg)',\r\n                    animation: `float ${duration}s ease-in-out ${delay}s infinite`,\r\n                    '&:hover': {\r\n                        transform: `translate(${xOffset}px, -4px) rotate(${rotation}deg)`,\r\n                        boxShadow: '0 8px 16px rgba(0,0,0,0.2)',\r\n                        zIndex: 2,\r\n                        '&::before': {\r\n                            opacity: 0.1,\r\n                        },\r\n                    },\r\n                    '&::before': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        background: 'linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n                        opacity: 0,\r\n                        transition: 'opacity 0.3s ease-in-out',\r\n                        pointerEvents: 'none',\r\n                    },\r\n                    backdropFilter: 'blur(1px)',\r\n                }}\r\n            >\r\n                <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                        fontSize: '0.85rem',\r\n                        fontWeight: 'bold',\r\n                        lineHeight: 1.2,\r\n                        mb: 0.5,\r\n                        whiteSpace: 'normal',\r\n                        color: cellTextColor,\r\n                        ...(position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\r\n                    }}\r\n                >\r\n                    {cellLabel}\r\n                </Typography>\r\n\r\n                {property && (\r\n                    <Typography\r\n                        variant=\"caption\"\r\n                        sx={{\r\n                            fontSize: '0.75rem',\r\n                            fontWeight: 'bold',\r\n                            lineHeight: 1.2,\r\n                            color: cellTextColor,\r\n                            ...(position === 10 || position === 20 || position === 30 || position === 0 ? tiny5FontStyle : {}),\r\n                        }}\r\n                    >\r\n                        ${property.price}\r\n                    </Typography>\r\n                )}\r\n\r\n                {playersHere.length > 0 && (\r\n                    <Box sx={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        right: 0,\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        gap: 0.25,\r\n                        p: 0.25,\r\n                        maxWidth: '100%',\r\n                        justifyContent: 'flex-end'\r\n                    }}>\r\n                        {playersHere.map(player => {\r\n                            const isAnimating = animatingPlayers[player.id]?.isAnimating;\r\n                            const currentPathIndex = animatingPlayers[player.id]?.currentPathIndex;\r\n                            const isCurrentPosition = currentPathIndex !== undefined &&\r\n                                animatingPlayers[player.id]?.path[currentPathIndex] === position;\r\n\r\n                            return (\r\n                                <Avatar\r\n                                    key={player.id}\r\n                                    sx={{\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        bgcolor: player.color || '#ccc',\r\n                                        fontSize: '1rem',\r\n                                        border: '2px solid #fff',\r\n                                        boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        fontWeight: 'bold',\r\n                                        transition: 'all 0.3s ease-in-out',\r\n                                        animation: isCurrentPosition ? 'bounce 0.3s ease-in-out' : 'none',\r\n                                        '&:hover': {\r\n                                            transform: 'scale(1.1)',\r\n                                            transition: 'transform 0.2s'\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {player.tokenIcon || player.name.charAt(0)}\r\n                                </Avatar>\r\n                            );\r\n                        })}\r\n                    </Box>\r\n                )}\r\n            </Paper>\r\n        );\r\n    };\r\n\r\n    // Helper function to get the spiral position for a grid cell\r\n    const getSpiralPosition = (row: number, col: number): number | null => {\r\n        // Return null for center cells\r\n        if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\r\n            return null;\r\n        }\r\n\r\n        // Start from GO (bottom-left corner) and move clockwise\r\n        if (row === BOARD_SIZE - 1) {\r\n            // Bottom row (left to right: 0-10)\r\n            return col;\r\n        } else if (col === BOARD_SIZE - 1) {\r\n            // Right column (bottom to top: 11-19)\r\n            return 10 + (BOARD_SIZE - 1 - row);\r\n        } else if (row === 0) {\r\n            // Top row (right to left: 20-30)\r\n            return 20 + (BOARD_SIZE - 1 - col);\r\n        } else { // col === 0\r\n            // Left column (top to bottom: 31-39)\r\n            return 30 + row;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            p: 1,\r\n            bgcolor: THEME_COLORS.background,\r\n            position: 'relative',\r\n            '&::before': {\r\n                content: '\"\"',\r\n                ...paperTexture,\r\n            },\r\n            '&::after': {\r\n                content: '\"\"',\r\n                ...noiseTexture,\r\n            },\r\n            ...bounceAnimation,\r\n            '@keyframes float': {\r\n                '0%': {\r\n                    transform: 'translate(0, 0) rotate(0deg)',\r\n                },\r\n                '25%': {\r\n                    transform: 'translate(2px, -2px) rotate(0.5deg)',\r\n                },\r\n                '50%': {\r\n                    transform: 'translate(0, -3px) rotate(0deg)',\r\n                },\r\n                '75%': {\r\n                    transform: 'translate(-2px, -2px) rotate(-0.5deg)',\r\n                },\r\n                '100%': {\r\n                    transform: 'translate(0, 0) rotate(0deg)',\r\n                },\r\n            },\r\n        }}>\r\n            <Box\r\n                sx={{\r\n                    flex: 1,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'grid',\r\n                    gridTemplateColumns: `repeat(${BOARD_SIZE}, 1fr)`,\r\n                    gridTemplateRows: `repeat(${BOARD_SIZE}, 1fr)`,\r\n                    p: 1,\r\n                    backgroundColor: THEME_COLORS.background,\r\n                    borderRadius: 1,\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative',\r\n                    '&::after': {\r\n                        content: '\"\"',\r\n                        ...vignetteEffect,\r\n                    },\r\n                }}\r\n            >\r\n                {Array.from({ length: BOARD_SIZE * BOARD_SIZE }).map((_, index) => {\r\n                    const row = Math.floor(index / BOARD_SIZE);\r\n                    const col = index % BOARD_SIZE;\r\n                    const position = getSpiralPosition(row, col);\r\n                    const isOuterCell = row === 0 || row === BOARD_SIZE - 1 || col === 0 || col === BOARD_SIZE - 1;\r\n\r\n                    if (position !== null) {\r\n                        return (\r\n                            <Box key={index} sx={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                p: isOuterCell ? 0.25 : 0\r\n                            }}>\r\n                                {renderBoardCell(position)}\r\n                            </Box>\r\n                        );\r\n                    }\r\n\r\n                    // For inner cells, create a single merged background with centered logo\r\n                    if (row === 1 && col === 1) {\r\n                        return (\r\n                            <Box key={index} sx={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                bgcolor: THEME_COLORS.background,\r\n                                gridColumn: '2 / -2',\r\n                                gridRow: '2 / -2',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                position: 'relative',\r\n                            }}>\r\n                                <Typography\r\n                                    variant=\"h1\"\r\n                                    sx={{\r\n                                        fontSize: { xs: '8rem', sm: '8rem', md: '8rem' },\r\n                                        fontWeight: 'bold',\r\n                                        color: THEME_COLORS.card_text,\r\n                                        textAlign: 'center',\r\n                                        textShadow: '2px 2px 4px rgba(0,0,0,0.2)',\r\n                                        ...tiny5FontStyle,\r\n                                    }}\r\n                                >\r\n                                    Monopoly\r\n                                    <br />\r\n                                    Automata\r\n                                </Typography>\r\n                            </Box>\r\n                        );\r\n                    }\r\n\r\n                    // Skip rendering other inner cells as they're covered by the merged cell\r\n                    if (row > 0 && row < BOARD_SIZE - 1 && col > 0 && col < BOARD_SIZE - 1) {\r\n                        return null;\r\n                    }\r\n\r\n                    return (\r\n                        <Box key={index} sx={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            bgcolor: THEME_COLORS.background\r\n                        }} />\r\n                    );\r\n                })}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}