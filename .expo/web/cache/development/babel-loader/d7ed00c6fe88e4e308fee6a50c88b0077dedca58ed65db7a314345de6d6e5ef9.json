{"ast":null,"code":"import React from 'react';\nimport { Box, Paper, Typography, Avatar, Chip } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { THEME_COLORS } from \"../../theme/colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PlayerDashboard = function PlayerDashboard() {\n  var players = useSelector(function (state) {\n    return state.game.players;\n  });\n  var properties = useSelector(function (state) {\n    return state.game.properties;\n  });\n  var transactions = useSelector(function (state) {\n    return state.game.transactions;\n  });\n  if (players.length === 0) {\n    return _jsx(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2\n      },\n      children: _jsx(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontSize: '0.9rem'\n        },\n        children: \"No players in the game\"\n      })\n    });\n  }\n  return _jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 2\n    },\n    children: [_jsx(Typography, {\n      variant: \"h6\",\n      sx: {\n        fontSize: '0.85rem'\n      },\n      children: \"Player Dashboard\"\n    }), _jsx(Box, {\n      sx: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n        gap: 1.5,\n        width: '100%'\n      },\n      children: players.map(function (player) {\n        var playerTransactions = transactions.filter(function (t) {\n          return t.from === player.id || t.to === player.id;\n        }).slice(0, 3);\n        return _jsxs(Paper, {\n          elevation: 2,\n          sx: {\n            p: 1.5,\n            borderLeft: `4px solid ${player.color || THEME_COLORS.text}`,\n            backgroundColor: THEME_COLORS.background,\n            minHeight: '200px',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [_jsxs(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 1.5,\n            children: [_jsx(Avatar, {\n              sx: {\n                bgcolor: player.color || '#ccc',\n                mr: 1.5,\n                width: 28,\n                height: 28,\n                fontSize: '0.85rem'\n              },\n              children: player.tokenIcon || player.name.charAt(0)\n            }), _jsxs(Box, {\n              children: [_jsx(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  fontSize: '0.8rem',\n                  fontWeight: 'bold'\n                },\n                children: player.name\n              }), _jsx(Chip, {\n                label: `$${player.money}`,\n                color: \"success\",\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  height: 18,\n                  fontSize: '0.7rem'\n                }\n              })]\n            })]\n          }), _jsxs(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontSize: '0.7rem',\n              mb: 1\n            },\n            children: [\"Position: \", player.position, player.position === 0 && ' (GO)']\n          }), _jsx(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              fontSize: '0.7rem',\n              mb: 0.5\n            },\n            children: \"Properties:\"\n          }), _jsx(Box, {\n            sx: {\n              mb: 1.5,\n              flex: 1\n            },\n            children: player.properties.length > 0 ? _jsx(Box, {\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              gap: 0.5,\n              children: player.properties.map(function (propertyId) {\n                var property = properties.find(function (p) {\n                  return String(p.id) === propertyId;\n                });\n                return property ? _jsx(Chip, {\n                  label: property.name,\n                  size: \"small\",\n                  sx: {\n                    height: 18,\n                    fontSize: '0.65rem',\n                    bgcolor: property.color + '20',\n                    borderLeft: `2px solid ${property.color}`,\n                    borderRadius: '3px'\n                  }\n                }, property.id) : null;\n              })\n            }) : _jsx(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                fontSize: '0.7rem'\n              },\n              children: \"No properties owned\"\n            })\n          }), _jsx(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              fontSize: '0.7rem',\n              mb: 0.5\n            },\n            children: \"Recent Transactions:\"\n          }), playerTransactions.length > 0 ? _jsx(Box, {\n            sx: {\n              bgcolor: '#f5f5f5',\n              borderRadius: 1,\n              p: 0.5,\n              fontSize: '0.7rem'\n            },\n            children: playerTransactions.map(function (transaction) {\n              return _jsx(Box, {\n                sx: {\n                  py: 0.25,\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 0.5\n                },\n                children: _jsxs(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    fontSize: '0.7rem'\n                  },\n                  children: [transaction.from === player.id ? '➖' : '➕', \"$\", transaction.amount, \" (\", transaction.type, \")\"]\n                })\n              }, transaction.id);\n            })\n          }) : _jsx(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              fontSize: '0.7rem'\n            },\n            children: \"No recent transactions\"\n          })]\n        }, player.id);\n      })\n    })]\n  });\n};\nexport default PlayerDashboard;","map":{"version":3,"names":["React","Box","Paper","Typography","Avatar","Chip","useSelector","THEME_COLORS","jsx","_jsx","jsxs","_jsxs","PlayerDashboard","players","state","game","properties","transactions","length","elevation","sx","p","children","variant","fontSize","width","display","flexDirection","gap","gridTemplateColumns","map","player","playerTransactions","filter","t","from","id","to","slice","borderLeft","color","text","backgroundColor","background","minHeight","alignItems","mb","bgcolor","mr","height","tokenIcon","name","charAt","fontWeight","label","money","size","position","flex","flexWrap","propertyId","property","find","String","borderRadius","transaction","py","amount","type"],"sources":["C:/Users/janu3/GitHub/Monopoly_Automator/monopoly-voice-automation/src/components/PlayerDashboard/PlayerDashboard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Paper, Typography, List, ListItem, Divider, Avatar, Chip, Grid } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { THEME_COLORS } from '../../theme/colors';\r\n\r\nconst PlayerDashboard: React.FC = () => {\r\n  const players = useSelector((state: RootState) => state.game.players);\r\n  const properties = useSelector((state: RootState) => state.game.properties);\r\n  const transactions = useSelector((state: RootState) => state.game.transactions);\r\n\r\n  if (players.length === 0) {\r\n    return (\r\n      <Paper elevation={3} sx={{ p: 2 }}>\r\n        <Typography variant=\"h6\" sx={{ fontSize: '0.9rem' }}>No players in the game</Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      gap: 2\r\n    }}>\r\n      <Typography variant=\"h6\" sx={{ fontSize: '0.85rem' }}>Player Dashboard</Typography>\r\n\r\n      <Box sx={{\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n        gap: 1.5,\r\n        width: '100%'\r\n      }}>\r\n        {players.map(player => {\r\n          const playerTransactions = transactions\r\n            .filter(t => t.from === player.id || t.to === player.id)\r\n            .slice(0, 3);\r\n\r\n          return (\r\n            <Paper\r\n              key={player.id}\r\n              elevation={2}\r\n              sx={{\r\n                p: 1.5,\r\n                borderLeft: `4px solid ${player.color || THEME_COLORS.text}`,\r\n                backgroundColor: THEME_COLORS.background,\r\n                minHeight: '200px',\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n              }}\r\n            >\r\n              <Box display=\"flex\" alignItems=\"center\" mb={1.5}>\r\n                <Avatar\r\n                  sx={{\r\n                    bgcolor: player.color || '#ccc',\r\n                    mr: 1.5,\r\n                    width: 28,\r\n                    height: 28,\r\n                    fontSize: '0.85rem'\r\n                  }}\r\n                >\r\n                  {player.tokenIcon || player.name.charAt(0)}\r\n                </Avatar>\r\n                <Box>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontSize: '0.8rem', fontWeight: 'bold' }}>\r\n                    {player.name}\r\n                  </Typography>\r\n                  <Chip\r\n                    label={`$${player.money}`}\r\n                    color=\"success\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    sx={{ height: 18, fontSize: '0.7rem' }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Typography variant=\"body2\" sx={{ fontSize: '0.7rem', mb: 1 }}>\r\n                Position: {player.position}\r\n                {player.position === 0 && ' (GO)'}\r\n              </Typography>\r\n\r\n              <Typography variant=\"subtitle2\" sx={{ fontSize: '0.7rem', mb: 0.5 }}>\r\n                Properties:\r\n              </Typography>\r\n              <Box sx={{ mb: 1.5, flex: 1 }}>\r\n                {player.properties.length > 0 ? (\r\n                  <Box display=\"flex\" flexWrap=\"wrap\" gap={0.5}>\r\n                    {player.properties.map(propertyId => {\r\n                      const property = properties.find(p => String(p.id) === propertyId);\r\n                      return property ? (\r\n                        <Chip\r\n                          key={property.id}\r\n                          label={property.name}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            height: 18,\r\n                            fontSize: '0.65rem',\r\n                            bgcolor: property.color + '20',\r\n                            borderLeft: `2px solid ${property.color}`,\r\n                            borderRadius: '3px'\r\n                          }}\r\n                        />\r\n                      ) : null;\r\n                    })}\r\n                  </Box>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.7rem' }}>\r\n                    No properties owned\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n\r\n              <Typography variant=\"subtitle2\" sx={{ fontSize: '0.7rem', mb: 0.5 }}>\r\n                Recent Transactions:\r\n              </Typography>\r\n              {playerTransactions.length > 0 ? (\r\n                <Box sx={{\r\n                  bgcolor: '#f5f5f5',\r\n                  borderRadius: 1,\r\n                  p: 0.5,\r\n                  fontSize: '0.7rem'\r\n                }}>\r\n                  {playerTransactions.map(transaction => (\r\n                    <Box\r\n                      key={transaction.id}\r\n                      sx={{\r\n                        py: 0.25,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 0.5\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ fontSize: '0.7rem' }}>\r\n                        {transaction.from === player.id ? '➖' : '➕'}\r\n                        ${transaction.amount} ({transaction.type})\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.7rem' }}>\r\n                  No recent transactions\r\n                </Typography>\r\n              )}\r\n            </Paper>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PlayerDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}